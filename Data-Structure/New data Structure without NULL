#include<bits/stdc++.h>
using namespace std;
struct mylist
{
    int data;
    struct mylist * next;


};
struct mylist * head;
void insert_first(int data)
{
    struct mylist* temp=(struct mylist*)malloc(sizeof(struct mylist));
    temp->data=data;
    temp->next=head;
    head=temp;
}
void display()
{
    struct mylist *temp=head;
    while(temp!=NULL)
    {
        printf("%d ",temp->data);
        temp=temp->next;
    }
    printf("\n");
}
struct mylist* insert_last(int data)
{
    struct mylist *temp=head,* new_node=(struct mylist*)malloc(sizeof(struct mylist));
    new_node->data=data;
    new_node->next=NULL;
    if (temp==NULL)
    {
        head=new_node;
        return new_node;
    }
    while(temp->next!=NULL)
    {
        temp=temp->next;
    }
    temp->next=new_node;

    return temp;

}

void insert_after_nth(int data,int x)
{

    struct mylist * temp=head,* temp2,* new_node=(struct mylist *)malloc(sizeof(struct mylist));
    new_node->data=x;

    while(temp!=NULL)
    {
        if (temp->data==data)
        {
            temp2=temp->next;
            temp->next=new_node;
            new_node->next=temp2;
            return ;


        }
        temp=temp->next;
    }
}

void head_delate()
{

    struct mylist * temp=head;
    head=temp->next;



}
void delate_Nth(int x )
{
    struct mylist * temp;
    temp->next=NULL;
    temp->next=head;
     while(temp->next != NULL)
    {
        if(temp->next->data == x)
        {
            temp->next = temp->next->next;
            break;
        }
        temp = temp->next;

    }

}

int main ()
{
    head=NULL;
    insert_last(1);
    insert_last(2);

    insert_last(3);

    insert_last(4);

    insert_last(5);
        display();

    insert_first(0);

    display();
    insert_after_nth(3,9);
    display();
    head_delate();
        display();
delate_Nth(9);
        display();




}
